-- ===========================================
-- 🏫 SCHOOL DATABASE WITH STRUCTURED IDS
-- ===========================================

-- Drop existing tables safely
DROP TABLE IF EXISTS student_address CASCADE;
DROP TABLE IF EXISTS students CASCADE;
DROP TABLE IF EXISTS teachers CASCADE;
DROP TABLE IF EXISTS courses CASCADE;
DROP TABLE IF EXISTS annex_building CASCADE;
DROP TABLE IF EXISTS department CASCADE;
DROP TABLE IF EXISTS main_building CASCADE;

-- ===========================================
-- 1. Main Building
-- ===========================================
CREATE TABLE main_building (
    id SERIAL PRIMARY KEY,
    building_id INT UNIQUE,
    building_name VARCHAR(100) NOT NULL,
    num_of_floors INT
);

-- ===========================================
-- 2. Department
-- ===========================================
CREATE TABLE department (
    id SERIAL PRIMARY KEY,
    department_id INT UNIQUE,
    department_name VARCHAR(100) NOT NULL,
    head_of_department VARCHAR(100),
    department_building_id INT REFERENCES main_building(building_id)
);

-- ===========================================
-- 3. Annex Building
-- ===========================================
CREATE TABLE annex_building (
    id SERIAL PRIMARY KEY,
    building_id INT UNIQUE,
    building_name VARCHAR(100) NOT NULL,
    main_building_id INT REFERENCES main_building(building_id)
);

-- ===========================================
-- 4. Courses
-- ===========================================
CREATE TABLE courses (
    id SERIAL PRIMARY KEY,
    course_id INT UNIQUE,
    course_name VARCHAR(100) NOT NULL UNIQUE,
    course_code VARCHAR(20) UNIQUE NOT NULL,
    credits INT CHECK (credits > 0),
    department_id INT REFERENCES department(department_id)
);

-- ===========================================
-- 5. Teachers
-- ===========================================
CREATE TABLE teachers (
    id SERIAL PRIMARY KEY,
    teacher_id INT UNIQUE,
    full_name VARCHAR(100) NOT NULL,
    gender CHAR(1) CHECK (gender IN ('M', 'F')),
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(15),
    course VARCHAR(40) REFERENCES courses(course_name),
    course_id INT REFERENCES courses(course_id),
    department_id INT REFERENCES department(department_id),
    building_id INT
);

-- ===========================================
-- 6. Students
-- ===========================================
CREATE TABLE students (
    id SERIAL PRIMARY KEY,
    student_id INT UNIQUE,
    full_name VARCHAR(100) NOT NULL,
    gender CHAR(1) CHECK (gender IN ('M', 'F')),
    birth_date DATE,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(15),
    course VARCHAR(40),
    course_id INT REFERENCES courses(course_id),
    department_id INT REFERENCES department(department_id)
);

-- ===========================================
-- 7. Student Address
-- ===========================================
CREATE TABLE student_address (
    id SERIAL PRIMARY KEY,
    address_id INT UNIQUE,
    student_id INT REFERENCES students(student_id) ON DELETE CASCADE,
    street VARCHAR(100),
    city VARCHAR(50),
    province VARCHAR(50),
    postal_code VARCHAR(10)
);

-- ===========================================
-- 📥 SAMPLE DATA
-- ===========================================

-- Main Building (building_id: 11, 12, 13)
INSERT INTO main_building (building_id, building_name, num_of_floors) VALUES
(11, 'Science Hall', 5),
(12, 'Engineering Complex', 6),
(13, 'Business Center', 4);

-- Department (department_id: 31, 32, 33)
INSERT INTO department (department_id, department_name, head_of_department, department_building_id) VALUES
(31, 'Computer Science', 'Dr. Alice Mendoza', 11),
(32, 'Civil Engineering', 'Engr. Mark Villanueva', 12),
(33, 'Business Administration', 'Prof. Carla Dizon', 13);

-- Annex Building (building_id: 21, 22, 23)
INSERT INTO annex_building (building_id, building_name, main_building_id) VALUES
(21, 'Science Annex A', 11),
(22, 'Engineering Annex B', 12),
(23, 'Business Annex C', 13);

-- Courses (course_id: 101, 102, 103)
INSERT INTO courses (course_id, course_name, course_code, credits, department_id) VALUES
(101, 'BS Computer Science', 'CS101', 3, 31),
(102, 'BS Civil Engineering', 'CE102', 4, 32),
(103, 'BS Business Administration', 'BA103', 3, 33);

-- Teachers (teacher_id: 41, 42, 43)
INSERT INTO teachers (teacher_id, full_name, gender, email, phone_number, course, course_id, department_id, building_id) VALUES
(41, 'Prof. John Reyes', 'M', 'john.reyes@example.com', '09171234567', 'BS Computer Science', 101, 31, 11),
(42, 'Prof. Maria Santos', 'F', 'maria.santos@example.com', '09183456789', 'BS Civil Engineering', 102, 32, 12),
(43, 'Prof. Carlo Dela Cruz', 'M', 'carlo.delacruz@example.com', '09191231234', 'BS Business Administration', 103, 33, 13);

-- Students (student_id: 51, 52, 53)
INSERT INTO students (student_id, full_name, gender, birth_date, email, phone_number, course, course_id, department_id) VALUES
(51, 'Ana Lopez', 'F', '2002-03-15', 'ana.lopez@example.com', '09190000001', 'BS Computer Science', 101, 31),
(52, 'Mark Tan', 'M', '2001-09-10', 'mark.tan@example.com', '09190000002', 'BS Civil Engineering', 102, 32),
(53, 'Ella Cruz', 'F', '2003-01-25', 'ella.cruz@example.com', '09190000003', 'BS Business Administration', 103, 33);

-- Student Address (address_id: 61, 62, 63)
INSERT INTO student_address (address_id, student_id, street, city, province, postal_code) VALUES
(61, 51, '123 Science St.', 'Quezon City', 'Metro Manila', '1101'),
(62, 52, '456 Engineer Ave.', 'Makati', 'Metro Manila', '1200'),
(63, 53, '789 Business Blvd.', 'Pasig', 'Metro Manila', '1600');
